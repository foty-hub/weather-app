{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","exampleReq","useState","currentInfo","setCurrent","useEffect","fetchData","a","fetch","response","json","data","current","console","log","className","Math","round","temp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAAe,I,YCuCAA,EAjCH,WAEV,IAIMC,EAAU,8DADJ,UACI,gBAFH,UAEG,kBAJA,oCAFA,EASkBC,mBAAS,IAT3B,mBASTC,EATS,KASIC,EATJ,KAYhBC,qBAAU,WACRC,MACC,IAGH,IAAMA,EAAS,uCAAG,8BAAAC,EAAA,sEACOC,MAAMP,GADb,cACVQ,EADU,gBAEGA,EAASC,OAFZ,OAEVC,EAFU,OAGhBP,EAAWO,EAAKC,SAChBC,QAAQC,IAAIH,GAJI,2CAAH,qDAQf,OACE,sBAAKI,UAAU,MAAf,UACE,gDACE,8BAAIC,KAAKC,MAAMd,EAAYe,KAAM,QAAjC,gBCtBOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3a3b65f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport React, {useEffect, useState} from \"react\";\nimport './App.css';\n\n\n\nconst App = () => {\n\n  const APP_KEY = 'a7ff38ee1c49b77064c72f94875dcc9e';\n  // positive coords are N/E, negative are S/W\n  const long = '51.5074';\n  const lat = '-0.1278';\n  const exampleReq = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${long}&appid=${APP_KEY}`;\n\n  // stores the current information. Temperatures are given in Kelvin, so must be converted to Celsius\n  const [currentInfo, setCurrent] = useState([]);\n\n  // triggered on page load, will be set up to refresh when new location is added\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // fetches and logs the data, updates the current info\n  const fetchData = async () => {\n    const response = await fetch(exampleReq);\n    const data = await response.json();\n    setCurrent(data.current);\n    console.log(data);\n  };\n\n  // returns the HTML to be displayed\n  return (\n    <div className=\"App\">\n      <h1>LONDON WEATHER</h1>\n        <p>{Math.round(currentInfo.temp -273.15)} Â°C</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}